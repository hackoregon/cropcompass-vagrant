{
  "AWSTemplateFormatVersion": "2010-09-09",

  "Description": "Cloudformation Template to Launch CropCompass Server, Install Software and Data.",

  "Parameters": {
    "KeyName": {
      "Type": "String",
      "Default": "cropcompass",
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the web server"
    },
    "InstanceType" : {
      "Description" : "CropCompass EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
   }
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" }
    },

    "AWSRegionArch2AMI" : {
    "us-east-1"      : { "32" : "ami-47273c2e", "64" : "ami-27273c4e", "64HVM" : "ami-15273c7c" },
    "us-west-2"      : { "32" : "ami-686b1e58", "64" : "ami-d54cb0b5", "64HVM" : "ami-ba6b1e8a" },
    "us-west-1"      : { "32" : "ami-980f37dd", "64" : "ami-a60f37e3", "64HVM" : "ami-ae0f37eb" },
    "eu-west-1"      : { "32" : "ami-1bfa3f6c", "64" : "ami-19fa3f6e", "64HVM" : "ami-f5fa3f82" },
    "ap-southeast-1" : { "32" : "ami-e298cbb0", "64" : "ami-e498cbb6", "64HVM" : "ami-ec98cbbe" },
    "ap-southeast-2" : { "32" : "ami-073aa23d", "64" : "ami-7b3aa241", "64HVM" : "ami-7d3aa247" },
    "ap-northeast-1" : { "32" : "ami-69f68d68", "64" : "ami-7df68d7c", "64HVM" : "ami-9bf68d9a" },
    "sa-east-1"      : { "32" : "ami-5ff85542", "64" : "ami-75f85568", "64HVM" : "ami-91f8558c" }
  }
  },

  "Resources" : {
    "CropCompassServer": {
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
         }
      },
      "Properties": {
        "SecurityGroups": [ { "Ref": "CropCompassServerSecurityGroup" } ],
        "ImageId": { "Fn::FindInMap": [ "AWSRegionArch2AMI", { "Ref": "AWS::Region" }, { "Fn::FindInMap": [ "AWSInstanceType2Arch", { "Ref": "InstanceType" }, "Arch" ] } ]
        },
        "UserData": {
          "Fn::Base64": { "Fn::Join":["", [
            "#!/bin/bash -ex\n",
            "apt-get update\n",
            "apt-get -y install python-setuptools\n",
            "mkdir aws-cfn-bootstrap-latest\n",
            "curl https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz | tar xz -C aws-cfn-bootstrap-latest --strip-components 1\n",
            "easy_install aws-cfn-bootstrap-latest\n",
            "#Helper Error Routine\n",
            "function error_exit\n",
            "{\n",
            "/usr/local/bin/cfn-signal -e 1 -r \"$1\" '",  { "Ref": "WaitHandle" } , "'\n",
            "  exit 1\n",
            "}\n\n",
            "# Install Git\n",
            "sudo apt-get update\n",
            "sudo apt-get install -y git\n",
            "sudo apt-get install -y git|| error_exit 'Failed to install git.'\n",
            "# Get the repo\n",
            "cd /home/ubuntu\n",
            "git clone https://github.com/hackoregon/cropcompass-vagrant.git|| error_exit 'Failed to install CropCompassServer.'\n",
            "# Signal git clone Success.\n",
            "# Create vagrant user.\n",
            "sudo useradd -m vagrant\n",
            "sudo echo \"123:vagrant\" | chpasswd\n",
            "# Create Symlinks.\n",
            "sudo ln -s /vagrant/cropcompass /home/vagrant/cropcompass\n",
            "# Run the cropcompass installs\n",
            "cd /vagrant/scripts\n",
            "./installs.bash >>install.log\n",
            "/usr/local/bin/cfn-signal -e 0 -r \"CropCompassServer install complete.\" ", { "Ref": "WaitHandle" } , "\n"
          ]]}
        },
        "KeyName": { "Ref": "KeyName" },
        "InstanceType": { "Ref": "InstanceType" }
      }
    },

    "CropCompassServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Open up SSH access plus Chef Server required ports",
        "SecurityGroupIngress" : [
          { "IpProtocol": "tcp", "FromPort": "22",   "ToPort": "22",   "CidrIp": { "Ref" : "SSHLocation"} }
        ]
      }
    },
    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    }

  },

  "Outputs" : {
     }
  }
